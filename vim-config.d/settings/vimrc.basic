" Clipboard settings
set clipboard+=unnamedplus

" Provider settings
let g:loaded_python_provider = 1
let g:node_host_prog = '/home/poniraq/.npm-packages/bin/neovim-node-host'


" Deoplete settings
let g:deoplete#enable_at_startup = 1
" Tern
" let g:deoplete#sources#ternjs#timeout = 1
" let g:deoplete#sources#ternjs#types = 1
" let g:deoplete#sources#ternjs#docs = 1
" let g:deoplete#sources#ternjs#case_insensitive = 1


" UltiSnips settings
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsEditSplit="vertical"


" Ctrl-P settings
set wildignore+=*/tmp/*,*/node_modules/*,*.so,*.swp,*.zip,*/ext/*,*/build/*
let g:ctrlp_root_markA = ['node_modules', 'package.json', 'workspace.json', 'requirements.txt', 'docker-compose.yml']
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll|dat|bin)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }


" ALE
let g:airline#extensions#ale#enabled = 1
let g:ale_enabled = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_sign_column_always = 1
let g:ale_fixers = {
\   'javascript': ['eslint'],
\}
" let g:ale_linters = {
" \   'javascript': ['eslint'],
" \   'python': ['flake8']
" \}

augroup CloseLoclistWindowGroup
autocmd!
  autocmd QuitPre * if empty(&buftype) | lclose | endif
augroup END


" Visual
set nu
set showcmd
set timeoutlen=10000
set nohlsearch
syntax on


" Line highlighting
augroup CursorLine
  au!
  au VimEnter,WinEnter,BufWinEnter * setlocal cursorline
  au WinLeave * setlocal nocursorline
augroup END


" Specify the behavior when switching between buffers
try
  set switchbuf=useopen,usetab,newtab
  set stal=2
catch
endtry

" Return to last edit position when opening files (You want this!)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif


" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif


" Lightline options
let g:lightline = {}
let g:lightline.colorscheme = 'onedark'
let g:lightline.component_expand = {
\  'linter_checking': 'lightline#ale#checking',
\  'linter_warnings': 'lightline#ale#warnings',
\  'linter_errors': 'lightline#ale#errors',
\  'linter_ok': 'lightline#ale#ok',
\ }
let g:lightline.component_type = {
\  'linter_checking': 'left',
\  'linter_warnings': 'warning',
\  'linter_errors': 'error',
\  'linter_ok': 'left',
\ }

let g:lightline.active = { 'right': [
\  [ 'percent' ],
\  [ 'fileformat', 'fileencoding', 'filetype' ],
\  [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ]
\ ]}



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2

" GitGutter
set updatetime=100
let g:gitgutter_map_keys = 0

" Store local options in session by default
set sessionoptions+=localoptions
